No files changed, compilation skipped

Ran 14 tests for test/unit/CommerceProtocolIntegration.t.sol:CommerceProtocolIntegrationTest
[PASS] test_ContentRegistration_Success() (gas: 347848)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [350648] CommerceProtocolIntegrationTest::test_ContentRegistration_Success()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [312964] ContentRegistry::registerContent("QmTestHash123456789", "Test Content", "Test description", 0, 5000000 [5e6], [])
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [9247] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 3, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Test Content", category: 0, payPerViewPrice: 5000000 [5e6], timestamp: 1)
    │   └─ ← [Return] 3
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertGt(3, 0) [staticcall]
    │   └─ ← [Return]
    ├─ [18334] CreatorRegistry::getCreatorProfile(0x0000000000000000000000000000000000001001) [staticcall]
    │   └─ ← [Return] Creator({ isRegistered: true, subscriptionPrice: 10000000 [1e7], isVerified: false, totalEarnings: 0, contentCount: 3, subscriberCount: 0, registrationTime: 1, profileData: "Premium Creator", isSuspended: false })
    ├─ [0] VM::assertEq(3, 3) [staticcall]
    │   └─ ← [Return]
    └─ ← [Stop]

[FAIL: EvmError: Revert] test_EIP712Compliance_IndustryStandards() (gas: 143859)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [143859] CommerceProtocolIntegrationTest::test_EIP712Compliance_IndustryStandards()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 3000000 [3e6])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 3000000 [3e6])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_FrontRunningDefense_MEVResistance() (gas: 143497)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [143497] CommerceProtocolIntegrationTest::test_FrontRunningDefense_MEVResistance()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 10000000000000000000 [1e19])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 10000000000000000000 [1e19])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, maxSlippage: 500, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 18
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000000000000000 [1e18], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_PaymentCalculations_MathematicalPrecision() (gas: 148266)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [148266] CommerceProtocolIntegrationTest::test_PaymentCalculations_MathematicalPrecision()
    ├─ [0] VM::assertEq(5000000 [5e6], 5000000 [5e6], "Platform fee calculation incorrect") [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::assertEq(500000 [5e5], 500000 [5e5], "Operator fee calculation incorrect") [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::assertEq(94500000 [9.45e7], 94500000 [9.45e7], "Creator amount calculation incorrect") [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 100000000 [1e8])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 100000000 [1e8])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_PaymentExecution_MultiTokenComplexity() (gas: 155495)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [155495] CommerceProtocolIntegrationTest::test_PaymentExecution_MultiTokenComplexity()
    ├─ [2940] MockERC20::balanceOf(0x0000000000000000000000000000000000002001) [staticcall]
    │   └─ ← [Return] 0
    ├─ [2940] MockERC20::balanceOf(0x0000000000000000000000000000000000001001) [staticcall]
    │   └─ ← [Return] 1000000000 [1e9]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 20000000000000000000 [2e19])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 20000000000000000000 [2e19])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, maxSlippage: 300, deadline: 2701 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 18
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000000000000000 [1e18], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: panic: failed to convert value into enum type (0x21)] test_PaymentExecution_NormalConditions() (gas: 75167)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [75167] CommerceProtocolIntegrationTest::test_PaymentExecution_NormalConditions()
    ├─ [2940] MockERC20::balanceOf(0x0000000000000000000000000000000000002001) [staticcall]
    │   └─ ← [Return] 1000000000 [1e9]
    ├─ [940] MockERC20::balanceOf(0x0000000000000000000000000000000000002001) [staticcall]
    │   └─ ← [Return] 1000000000 [1e9]
    ├─ [2940] MockERC20::balanceOf(0x0000000000000000000000000000000000001001) [staticcall]
    │   └─ ← [Return] 1000000000 [1e9]
    ├─ [5261] PayPerView::getCreatorEarnings(0x0000000000000000000000000000000000001001) [staticcall]
    │   └─ ← [Return] 0, 0
    ├─ [37867] ContentRegistry::getPlatformStats() [staticcall]
    │   └─ ← [Revert] panic: failed to convert value into enum type (0x21)
    └─ ← [Revert] panic: failed to convert value into enum type (0x21)

[FAIL: EvmError: Revert] test_PaymentFailureRecovery_GracefulDegradation() (gas: 143860)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [143860] CommerceProtocolIntegrationTest::test_PaymentFailureRecovery_GracefulDegradation()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 3000000 [3e6])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 3000000 [3e6])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_PaymentIntentCreation_ComprehensiveValidation() (gas: 143567)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [143567] CommerceProtocolIntegrationTest::test_PaymentIntentCreation_ComprehensiveValidation()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 6000000000000000000 [6e18])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 6000000000000000000 [6e18])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, maxSlippage: 200, deadline: 1801 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 18
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x2e234DAe75C793f67A35089C9d99245E1C58470b, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000000000000000 [1e18], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_PaymentIntentCreation_Success() (gas: 115937)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [115937] CommerceProtocolIntegrationTest::test_PaymentIntentCreation_Success()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [97981] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [16409] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_ReentrancyDefense_MultiVectorAttacks() (gas: 142706)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [142706] CommerceProtocolIntegrationTest::test_ReentrancyDefense_MultiVectorAttacks()
    ├─ [0] VM::startPrank(0x00000000000000000000000000000000DeaDBeef)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 1000000000000000000000 [1e21])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000DeaDBeef, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 1000000000000000000000 [1e21])
    │   └─ ← [Return] true
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 18
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000000000000000 [1e18], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: next call did not revert as expected] test_RoleManagement_Success() (gas: 49751)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [49751] CommerceProtocolIntegrationTest::test_RoleManagement_Success()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [30103] CommerceProtocolIntegration::grantRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x0000000000000000000000000000000000009999)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000009999, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x0000000000000000000000000000000000009999) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [0] VM::expectRevert(custom error 0xf4844814)
    │   └─ ← [Return]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    └─ ← [Revert] next call did not revert as expected

[FAIL: EvmError: Revert] test_SignatureReplayDefense_ComprehensiveProtection() (gas: 144301)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [144301] CommerceProtocolIntegrationTest::test_SignatureReplayDefense_ComprehensiveProtection()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 3000000 [3e6])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 3000000 [3e6])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_SignatureSystem_CryptographicSecurity() (gas: 143860)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [143860] CommerceProtocolIntegrationTest::test_SignatureSystem_CryptographicSecurity()
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 3000000 [3e6])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002001, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 3000000 [3e6])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002001)
    │   └─ ← [Return]
    ├─ [95481] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 0, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 3601 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [33702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [7702] ContentRegistry::getContent(1) [staticcall]
    │   │   └─ ← [Return] Content({ creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", description: "Test description", category: 0, payPerViewPrice: 3000000 [3e6], isActive: true, createdAt: 1, purchaseCount: 0, tags: [], isReported: false, reportCount: 0 })
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(3000000 [3e6]) [staticcall]
    │   │   └─ ← [Return] 75000 [7.5e4]
    │   ├─ [13909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000000 [3e6], 0)
    │   │   ├─ [2569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

[FAIL: EvmError: Revert] test_SystemLoad_StressConditions() (gas: 402913)
Logs:
  Mock dependencies deployed:
  - Mock USDC: 0x22a7C94543caa0e72439289e039B35a64C79A966
  - Mock Commerce Protocol: 0xe1796e76a573113CcEDB6D266ae099471117972D
  - Mock Quoter: 0xCd54ec27b8c42B24BF58244214B5999334C58959
  Core contracts deployed:
  - CreatorRegistry: 0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
  - ContentRegistry: 0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
  - PayPerView: 0x49C602668FE7a8B397255d678684323355754631
  - SubscriptionManager: 0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
  - CommerceIntegration: 0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
  Contract permissions configured
  Test users set up with initial balances
  Setting up complete permission chain...
   ContentRegistry granted platform role in CreatorRegistry
   All platform roles verified
  Setting up cryptographic infrastructure...
   Cryptographic infrastructure configured
    - Real operator signer: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    - Malicious signer: 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
  Creating test data...
   Test data created successfully
    - Test content ID: 1
    - Premium content ID: 2

Traces:
  [44719596] CommerceProtocolIntegrationTest::setUp()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x22a7C94543caa0e72439289e039B35a64C79A966
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 5327 bytes of code
    ├─ [47643] MockERC20::mint(0x0000000000000000000000000000000000003001, 1000000000000 [1e12])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000003001, value: 1000000000000 [1e12])
    │   └─ ← [Stop]
    ├─ [1084925] → new MockCommerceProtocol@0xe1796e76a573113CcEDB6D266ae099471117972D
    │   └─ ← [Return] 5419 bytes of code
    ├─ [1503810] → new MockQuoterV2@0xCd54ec27b8c42B24BF58244214B5999334C58959
    │   └─ ← [Return] 6617 bytes of code
    ├─ [0] console::log("Mock dependencies deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock USDC:", MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Commerce Protocol:", MockCommerceProtocol: [0xe1796e76a573113CcEDB6D266ae099471117972D]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- Mock Quoter:", MockQuoterV2: [0xCd54ec27b8c42B24BF58244214B5999334C58959]) [staticcall]
    │   └─ ← [Stop]
    ├─ [1710396] → new PriceOracle@0x2DAc9e8d1275ECC440a35FA04E17995bddAd6B61
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 8313 bytes of code
    ├─ [4031410] → new CreatorRegistry@0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 19432 bytes of code
    ├─ [5389674] → new ContentRegistry@0x483a0eDa4d8856c61347B0F2e5B84a7af717c308
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 25995 bytes of code
    ├─ [6590652] → new PayPerView@0x49C602668FE7a8B397255d678684323355754631
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xc89f08b49c068684bf15b77e68611a9f601e70d1f919059510bccd18e691e535, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 32302 bytes of code
    ├─ [7122434] → new SubscriptionManager@0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x1fa68478e710912de24d46d09a1aa735096685a61549eeb0fefb3693b245e69c, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 34738 bytes of code
    ├─ [8554919] → new CommerceProtocolIntegration@0x21CF4161e41997dcb5F326618abF8D9039bC1b5B
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x0000000000000000000000000000000000000000000000000000000000000000, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0x501c65bac3e4ac3ac69864ba85559de0249f52b20e002f1e1d1232fd4e169231, account: 0x0000000000000000000000000000000000003001, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Return] 41651 bytes of code
    ├─ [0] console::log("Core contracts deployed:") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CreatorRegistry:", CreatorRegistry: [0xb2AbA3Bc597A0A84438094a65352D0e4B7dd92d4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- ContentRegistry:", ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- PayPerView:", PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- SubscriptionManager:", SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("- CommerceIntegration:", CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25566] ContentRegistry::grantPurchaseRecorderRole(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit RoleGranted(role: 0x9587bd5d64fd9020a2c3c45e38d0e7ca3330d50e4b4dd00bfe972ac5de3bc565, account: PayPerView: [0x49C602668FE7a8B397255d678684323355754631], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] PayPerView::grantPaymentProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0xd7d8b7014b7ed36eb085c9e3e427b642d74cab75ecefda8a757042e63ec59919, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25544] SubscriptionManager::grantSubscriptionProcessorRole(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B])
    │   ├─ emit RoleGranted(role: 0x4a2743f41a15276dad6813e73326037e88c2a55ffdd5c4cab4ea1745629b0d34, account: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [25735] CommerceProtocolIntegration::setPayPerView(PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   ├─ emit ContractAddressUpdated(contractName: "PayPerView", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: PayPerView: [0x49C602668FE7a8B397255d678684323355754631])
    │   └─ ← [Stop]
    ├─ [25756] CommerceProtocolIntegration::setSubscriptionManager(SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   ├─ emit ContractAddressUpdated(contractName: "SubscriptionManager", oldAddress: 0x0000000000000000000000000000000000000000, newAddress: SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb])
    │   └─ ← [Stop]
    ├─ [0] console::log("Contract permissions configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000001002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000001002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002001, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000002002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::deal(0x0000000000000000000000000000000000002002, 10000000000000000000 [1e19])
    │   └─ ← [Return]
    ├─ [0] console::log("Test users set up with initial balances") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [1138080] → new MockERC20@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [1138080] → new MockERC20@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   ├─ emit OwnershipTransferred(previousOwner: 0x0000000000000000000000000000000000000000, newOwner: CommerceProtocolIntegrationTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 5327 bytes of code
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, MockERC20: [0xF62849F9A0B5Bf2913b396098F7c7019b51A820a], 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 500, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 3000, 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [23482] MockQuoterV2::setMockPrice(0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, 10000 [1e4], 1000000 [1e6])
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [0] console::log("Setting up complete permission chain...") [staticcall]
    │   └─ ← [Stop]
    ├─ [25522] CreatorRegistry::grantPlatformRole(ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308])
    │   ├─ emit RoleGranted(role: 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, account: ContentRegistry: [0x483a0eDa4d8856c61347B0F2e5B84a7af717c308], sender: 0x0000000000000000000000000000000000003001)
    │   └─ ← [Stop]
    ├─ [0] console::log(" ContentRegistry granted platform role in CreatorRegistry") [staticcall]
    │   └─ ← [Stop]
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, PayPerView: [0x49C602668FE7a8B397255d678684323355754631]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, SubscriptionManager: [0xe8AC70d2b71f604B4C6a97dF31Be19EE13Dae5bb]) [staticcall]
    │   └─ ← [Return] true
    ├─ [436] CreatorRegistry::PLATFORM_CONTRACT_ROLE() [staticcall]
    │   └─ ← [Return] 0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510
    ├─ [1212] CreatorRegistry::hasRole(0x308cde6e77eeb20854449cfdfcb05fbdb9f7c478a875c1417621ec9a3dacb510, CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B]) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" All platform roles verified") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Setting up cryptographic infrastructure...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122
    ├─ [53085] CommerceProtocolIntegration::updateOperatorSigner(0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   ├─ emit RoleRevoked(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x0000000000000000000000000000000000003003, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit RoleGranted(role: 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, account: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB, sender: 0x0000000000000000000000000000000000003001)
    │   ├─ emit SignerUpdated(oldSigner: 0x0000000000000000000000000000000000003003, newSigner: 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB)
    │   └─ ← [Stop]
    ├─ [393] CommerceProtocolIntegration::SIGNER_ROLE() [staticcall]
    │   └─ ← [Return] 0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70
    ├─ [1234] CommerceProtocolIntegration::hasRole(0xe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70, 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Return] true
    ├─ [0] console::log(" Cryptographic infrastructure configured") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Real operator signer:", 0x2e988A386a799F506693793c6A5AF6B54dfAaBfB) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Malicious signer:", 0xa698d53d0b38cF4A7C9371c7ea8bec4594B00122) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("Creating test data...") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [174504] CreatorRegistry::registerCreator(10000000 [1e7], "Premium Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001001, subscriptionPrice: 10000000 [1e7], timestamp: 1, profileData: "Premium Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001002)
    │   └─ ← [Return]
    ├─ [150604] CreatorRegistry::registerCreator(5000000 [5e6], "Budget Creator")
    │   ├─ emit CreatorRegistered(creator: 0x0000000000000000000000000000000000001002, subscriptionPrice: 5000000 [5e6], timestamp: 1, profileData: "Budget Creator")
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::assertTrue(true) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [417612] ContentRegistry::registerContent("QmTestHash123456789", "Standard Content", "Test description", 0, 3000000 [3e6], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [22347] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 1, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Standard Content", category: 0, payPerViewPrice: 3000000 [3e6], timestamp: 1)
    │   └─ ← [Return] 1
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000001001)
    │   └─ ← [Return]
    ├─ [258788] ContentRegistry::registerContent("QmTestHash123456789", "Premium Course", "Test description", 0, 15000000 [1.5e7], [])
    │   ├─ [1009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2447] CreatorRegistry::updateCreatorStats(0x0000000000000000000000000000000000001001, 0, 1, 0)
    │   │   └─ ← [Stop]
    │   ├─ emit ContentRegistered(contentId: 2, creator: 0x0000000000000000000000000000000000001001, ipfsHash: "QmTestHash123456789", title: "Premium Course", category: 0, payPerViewPrice: 15000000 [1.5e7], timestamp: 1)
    │   └─ ← [Return] 2
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] console::log(" Test data created successfully") [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Test content ID:", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] console::log("  - Premium content ID:", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    └─ ← [Stop]

  [402913] CommerceProtocolIntegrationTest::test_SystemLoad_StressConditions()
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [32543] MockERC20::mint(0x0000000000000000000000000000000000009000, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009000, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009001, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009001, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009002, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009002, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009003, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009003, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009004, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009004, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009005, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009005, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009006, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009006, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009007, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009007, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009008, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009008, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::startPrank(0x0000000000000000000000000000000000003001)
    │   └─ ← [Return]
    ├─ [25743] MockERC20::mint(0x0000000000000000000000000000000000009009, 1000000000 [1e9])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000009009, value: 1000000000 [1e9])
    │   └─ ← [Stop]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000009000)
    │   └─ ← [Return]
    ├─ [25321] MockERC20::approve(CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], 1000000 [1e6])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000009000, spender: CommerceProtocolIntegration: [0x21CF4161e41997dcb5F326618abF8D9039bC1b5B], value: 1000000 [1e6])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000009000)
    │   └─ ← [Return]
    ├─ [42279] CommerceProtocolIntegration::createPaymentIntent(PlatformPaymentRequest({ paymentType: 1, creator: 0x0000000000000000000000000000000000001001, contentId: 1, paymentToken: 0x22a7C94543caa0e72439289e039B35a64C79A966, maxSlippage: 100, deadline: 7201 }))
    │   ├─ [3009] CreatorRegistry::isRegisteredCreator(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] true
    │   ├─ [2946] CreatorRegistry::getSubscriptionPrice(0x0000000000000000000000000000000000001001) [staticcall]
    │   │   └─ ← [Return] 10000000 [1e7]
    │   ├─ [3232] CreatorRegistry::calculatePlatformFee(10000000 [1e7]) [staticcall]
    │   │   └─ ← [Return] 250000 [2.5e5]
    │   ├─ [11909] PriceOracle::getTokenAmountForUSDC(MockERC20: [0x22a7C94543caa0e72439289e039B35a64C79A966], 10000000 [1e7], 0)
    │   │   ├─ [569] MockERC20::decimals() [staticcall]
    │   │   │   └─ ← [Return] 6
    │   │   ├─ [0] 0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a::quoteExactInputSingle(QuoteExactInputSingleParams({ tokenIn: 0x22a7C94543caa0e72439289e039B35a64C79A966, tokenOut: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913, amountIn: 1000000 [1e6], fee: 10000 [1e4], sqrtPriceLimitX96: 0 }))
    │   │   │   └─ ← [Stop]
    │   │   └─ ← [Revert] EvmError: Revert
    │   └─ ← [Revert] EvmError: Revert
    └─ ← [Revert] EvmError: Revert

Suite result: FAILED. 1 passed; 13 failed; 0 skipped; finished in 13.43ms (11.93ms CPU time)

Ran 1 test suite in 176.71ms (13.43ms CPU time): 1 tests passed, 13 failed, 0 skipped (14 total tests)

Failing tests:
Encountered 13 failing tests in test/unit/CommerceProtocolIntegration.t.sol:CommerceProtocolIntegrationTest
[FAIL: EvmError: Revert] test_EIP712Compliance_IndustryStandards() (gas: 143859)
[FAIL: EvmError: Revert] test_FrontRunningDefense_MEVResistance() (gas: 143497)
[FAIL: EvmError: Revert] test_PaymentCalculations_MathematicalPrecision() (gas: 148266)
[FAIL: EvmError: Revert] test_PaymentExecution_MultiTokenComplexity() (gas: 155495)
[FAIL: panic: failed to convert value into enum type (0x21)] test_PaymentExecution_NormalConditions() (gas: 75167)
[FAIL: EvmError: Revert] test_PaymentFailureRecovery_GracefulDegradation() (gas: 143860)
[FAIL: EvmError: Revert] test_PaymentIntentCreation_ComprehensiveValidation() (gas: 143567)
[FAIL: EvmError: Revert] test_PaymentIntentCreation_Success() (gas: 115937)
[FAIL: EvmError: Revert] test_ReentrancyDefense_MultiVectorAttacks() (gas: 142706)
[FAIL: next call did not revert as expected] test_RoleManagement_Success() (gas: 49751)
[FAIL: EvmError: Revert] test_SignatureReplayDefense_ComprehensiveProtection() (gas: 144301)
[FAIL: EvmError: Revert] test_SignatureSystem_CryptographicSecurity() (gas: 143860)
[FAIL: EvmError: Revert] test_SystemLoad_StressConditions() (gas: 402913)

Encountered a total of 13 failing tests, 1 tests succeeded
